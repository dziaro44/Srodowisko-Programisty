Należy napisać program który utowrzy dwa procesy potomne i pipe'a między nimi i w obu wywoła programy
podane jako argumenty z linii poleceń (za pomocą argc, argv)
Drugi z procesów potomnych dziedziczy standardowe wyjście po głównym procesie, najlepiej to widać na przykładach:

./prog 1 ps 1 sort
    PID TTY          TIME CMD
  54361 pts/1    00:00:00 bash
  54388 pts/1    00:00:00 prog
  54389 pts/1    00:00:00 ps
  54390 pts/1    00:00:00 sort
  
./prog 2 ls -la 1 cat
total 36
drwxrwxr-x 2 dude dude  4096 lut 21 21:49 .
drwxrwxr-x 6 dude dude  4096 lut 21 20:21 ..
-rwxrwxr-x 1 dude dude 17008 lut 21 21:49 prog
-rw-rw-r-- 1 dude dude   559 lut 21 21:49 prog.c
-rw-rw-r-- 1 dude dude  2632 lut 21 21:49 prog.o

./prog 2 ls -la 1 wc
      6      47     283
      
np. w "./prog 2 ls -la 1 wc", 2 oznacza liczbę słów w pierwszym progamie do wywołania, a 1 w drugim i 
faktycznie najpierw mamy "ls -la" - dwa słowa i "wc" - jedno 

Lista funkcji, które powinny zostać wykorzystane:
pipe() z unistd.h, utworzenie pipe'a
fork() z unistd.h, utworzenie procesów potomnych
close() z unistd.h, zamknięcie nieużywanych deskroptorów
dup() lub dup2() z unistd.h, otworzenie pipe'a na standardowe wejście/wyjście w procesach potomnych
execvp() z unistd.h, wykonanie programów
wait() lub waitpid() z sys/wait.h, poczekanie na zakończenie procesów potomnych
